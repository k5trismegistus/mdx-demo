?component: child+

?child: text
      | element
      | expr

element: "<" WS* element_name (WS* element_attribute)* WS* ">"
element_attribute: identifier "=" "{" WS* expression WS* "}"

expr:  "{" WS* expression WS* "}"

text: (text_character+)
?text_character: /[^{}<>]/

?element_name: identifier

?expression: expr_string
           | expr_number

?expr_string: string_literal
            | string_repeat
string_literal: "\"" /(\\\{|\\\}|[^{}<>])+/ "\""
string_repeat: string_literal WS* "*" WS* expr_number

?expr_number: number_literal
number_literal: number+

identifier: identifier_start [identifier_part*]
?identifier_start: alphabet
?identifier_part: alphabet
                | number

?alphabet: /[A-Za-z]/
?number: /[0-9]/

%import common.WS
